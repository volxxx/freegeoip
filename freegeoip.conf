<?xml version="1.0" encoding="UTF-8"?>
<Server debug="true" debugsrv="127.0.0.1:1905">
	<!-- Default HTTP server. -->
	<Listen addr=":8080" log="true" xheaders="false"/>

	<!-- Listen on other ports or unix sockets simultaneously. -->
	<!-- <Listen addr="/tmp/freegeoip" log="true" xheaders="true"/> -->

	<!-- Listen on HTTPS.
	     Run the following to generate a self-signed certificate:
	     go run $GOROOT/src/pkg/crypto/tls/generate_cert.go -host localhost
	-->
	<!--
	<Listen addr=":8090" log="true">
		<CertFile>./cert.pem</CertFile>
		<KeyFile>./key.pem</KeyFile>
	</Listen>
	-->

	<!-- Directory with the public website. -->
	<DocumentRoot>./static</DocumentRoot>

	<!-- Allow DNS lookups? e.g. /json/domain.com
	     If MaxConcurrent is reached DNS resolutions fail immediately. -->
	<DNS Enabled="true" Timeout="5s" MaxConcurrent="500"/>

	<!-- IP database.
	     Make sure the database exists before starting the server. -->
	<IPDB File="./db/ipdb.sqlite" CacheSize="51200" AutoReloadInSecs="20"/>

	<!-- Server limits, configuration of quota per remote IP.
	     Set MaxRequests to 0 to disable quota. -->
	<Limit MaxRequests="0" Expire="3600" APIKeyFile="db/users.htpasswd"/>

	<!-- Redis for managing quota. -->
	<Redis>
    <Addr>127.0.0.1:6379</Addr>
		<!-- Balance between multiple servers (tcp or unix socket): -->

    <Addr>/var/run/redis/redis.sock</Addr> 
	</Redis>
	
	<!-- Reserved redis key-value pair for freegeoip server -->
	<Reserved UsageTrackStartAtKeyName="FREEGEOIP_API_USAGE_TRACK_START_AT" />  
  
</Server>
